# based on helper.pro

set(target_name windscribe-helper)

# TODO boost version?
#find_package(Boost 1.36.0 REQUIRED COMPONENTS serialization thread filesystem)
find_package(Boost REQUIRED COMPONENTS serialization thread filesystem)
include_directories(${Boost_INCLUDE_DIRS}) 

find_package(OpenSSL REQUIRED)
include_directories(${OpenSSL_INCLUDE_DIRS}) 

# key_pub.txt is generated by build_all.py from key.pub
option(use_signature_check "Sign this build with key_pub.txt" OFF)

# error: multiple definition of main
#file(GLOB_RECURSE sources *.cpp *.h)
#message(STATUS "sources=${sources}")

# TODO glob + filter

set(sources
  ../../../common/utils/executable_signature/executable_signature.cpp
  ../../../common/utils/executable_signature/executablesignature_linux.cpp
  execute_cmd.cpp
  ipc/helper_security.cpp
  logger.cpp
  main.cpp
  server.cpp
  utils.cpp
  wireguard/wireguardadapter.cpp
  wireguard/wireguardcommunicator.cpp
  wireguard/wireguardcontroller.cpp
)

set(headers
  ../../../common/utils/executable_signature/executable_signature.h
  ../../../common/utils/executable_signature/executablesignature_linux.h
  ../../posix_common/helper_commands.h
  ../../posix_common/helper_commands_serialize.h
  3rdparty/pstream.h
  execute_cmd.h
  ipc/helper_security.h
  logger.h
  server.h
  utils.h
  wireguard/wireguardadapter.h
  wireguard/wireguardcommunicator.h
  wireguard/wireguardcontroller.h
)

add_executable(${target_name}
  ${sources}
  ${headers}
)

target_compile_options(${target_name} PUBLIC -Wall)

target_compile_definitions(${target_name} PUBLIC BOOST_BIND_GLOBAL_PLACEHOLDERS)
if(${use_signature_check})
  message(STATUS "use_signature_check=ON")
  target_compile_definitions(${target_name} PUBLIC USE_SIGNATURE_CHECK)
else()
  message(STATUS "use_signature_check=OFF")
endif()
target_compile_definitions(${target_name} PUBLIC QT_DISABLE_DEPRECATED_BEFORE=0x060000)

target_include_directories(${target_name} PUBLIC
  ${CMAKE_CURRENT_SOURCE_DIR}
)

target_link_libraries(${target_name} PUBLIC
  ${Boost_LIBRARIES}
  #${OpenSSL_LIBRARIES} # error: undefined reference
  OpenSSL::SSL
)

install(TARGETS ${target_name} DESTINATION ${CMAKE_INSTALL_BIN})
