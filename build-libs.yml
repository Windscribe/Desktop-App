# templates used by the build-libs jobs
# so they are duplicated here since yaml doesn't allow referencing anchor across files
# TODO: find better way to anchor the refs without duplicating
.template_win10_build: &template_win10_build
  tags: [win10]
  before_script:
    # run this blindly until baked into image
    - python tools/bin/get-pip.py
    - python -m pip install -r tools/requirements.txt


.template_mac_build: &template_mac_build
  tags: [macos11]
  before_script:
    # run this blindly until baked into image
    - python tools/bin/get-pip.py
    - python -m pip install -r tools/requirements.txt


# Build Dependency and Upload Jom
build:win:jom:
  <<: *template_win10_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_JOM
  script:
    - tools/deps/install_jom -zip
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_WIN == "y"'
      changes:
        - tools/vars/jom.yml

# No jom for mac

# Build Dependency and Upload Cares
build:win:cares:
  <<: *template_win10_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_CARES
  script:
    - tools/deps/install_cares -zip
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_WIN == "y"'
      changes:
        - tools/vars/cares.yml


build:mac:cares:
  <<: *template_mac_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_CARES
  script:
    - tools/deps/install_cares -zip
    - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_MAC == "y"'
      changes:
        - tools/vars/cares.yml


# Build Dependency and Upload Lzo
build:win:lzo:
  <<: *template_win10_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_LZO
  script:
    - tools/deps/install_lzo -zip
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_WIN == "y"'
      changes:
        - tools/vars/lzo.yml


build:mac:lzo:
  <<: *template_mac_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_LZO
  script:
    - tools/deps/install_lzo -zip
    - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_MAC == "y"'
      changes:
        - tools/vars/lzo.yml


# Build Dependency and Upload Boost
build:win:boost:
  <<: *template_win10_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_BOOST
  script:
    - tools/deps/install_boost -zip
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_WIN == "y"'
      changes:
        - tools/vars/boost.yml


build:mac:boost:
  <<: *template_mac_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_BOOST
  script:
    - tools/deps/install_boost -zip
    - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_MAC == "y"'
      changes:
        - tools/vars/boost.yml

# Build Dependency and Upload Wireguard
build:win:wireguard:
  <<: *template_win10_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_WIREGUARD
  script:
    - tools/deps/install_wireguard -zip
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_WIN == "y"'
      changes:
        - tools/vars/wireguard.yml


build:mac:wireguard:
  <<: *template_mac_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_WIREGUARD
  script:
    - tools/deps/install_wireguard -zip
    - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_MAC == "y"'
      changes:
        - tools/vars/wireguard.yml

# Build Dependency and Upload Gtest
build:win:gtest:
  <<: *template_win10_build
  stage: Build Dependencies 1
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_GTEST
  script:
    - tools/deps/install_gtest -zip
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_WIN == "y"'
      changes:
        - tools/vars/gtest.yml


build:mac:gtest:
 <<: *template_mac_build
 stage: Build Dependencies 1
 variables:
   GIT_STRATEGY: clone
   ARTIFACT_PATH: $ARTIFACT_GTEST
 script:
   - tools/deps/install_gtest -zip
   - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
 rules:
   - if: '$BUILD_LIBS_EVERYTIME == "y"'
   - if: '$BUILD_MAC == "y"'
     changes:
       - tools/vars/gtest.yml


# Build Dependency and Upload Openssl
build:win:openssl:
  <<: *template_win10_build
  stage: Build Dependencies 2
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_OPENSSL
  # needs:
    # - {job: 'build:win:jom', optional: true}
  script:
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_JOM "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_JOM}"
    - IF(Test-Path .\build-libs\) {Get-ChildItem .\build-libs\*.zip | Foreach {.\tools\bin\7z.exe x $_.FullName $("-obuild-libs\"+$([io.path]::GetFileNameWithoutExtension($_.name)))}}
    - tools/deps/install_openssl -zip
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_WIN == "y"'
      changes:
        - tools/vars/openssl.yml
        - tools/vars/jom.yml


build:mac:openssl:
  <<: *template_mac_build
  stage: Build Dependencies 2
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_OPENSSL
  script:
    - tools/deps/install_openssl -zip
    - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_MAC == "y"'
      changes:
        - tools/vars/openssl.yml

# Build Dependency and Upload Zlib
build:win:zlib:
  <<: *template_win10_build
  stage: Build Dependencies 2
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_ZLIB
  # needs:
    # - {job: 'build:win:jom', optional: true}
  script:
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_JOM "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_JOM}"
    - IF(Test-Path .\build-libs\) {Get-ChildItem .\build-libs\*.zip | Foreach {.\tools\bin\7z.exe x $_.FullName $("-obuild-libs\"+$([io.path]::GetFileNameWithoutExtension($_.name)))}}
    - tools/deps/install_zlib -zip
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_WIN == "y"'
      changes:
        - tools/vars/zlib.yml
        - tools/vars/jom.yml

# No zlib for mac


# Build and Upload Curl
build:win:curl:
  <<: *template_win10_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_CURL
  # needs:
    # - {job: 'build:win:openssl', optional: true}
    # - {job: 'build:win:zlib', optional: true}
  script:
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_OPENSSL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_OPENSSL}"
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_ZLIB "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_ZLIB}"
    - IF(Test-Path .\build-libs\) {Get-ChildItem .\build-libs\*.zip | Foreach {.\tools\bin\7z.exe x $_.FullName $("-obuild-libs\"+$([io.path]::GetFileNameWithoutExtension($_.name)))}}
    - tools/deps/install_curl -zip
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_WIN == "y"'
      changes:
        - tools/vars/curl.yml
        - tools/vars/zlib.yml
        - tools/vars/openssl.yml


build:mac:curl:
  <<: *template_mac_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_CURL
  # needs:
    # - {job: 'build:mac:openssl', optional: true}
  script:
    - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_OPENSSL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_OPENSSL}"
    - if [ -d ./build-libs/ ]; then for z in ./build-libs/*.zip; do unzip -qod ${z%%.zip} $z; done; fi
    - tools/deps/install_curl -zip
    - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_MAC == "y"'
      changes:
        - tools/vars/curl.yml
        - tools/vars/openssl.yml


# Build and Upload Openvpn
build:win:openvpn:
  <<: *template_win10_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_OPENVPN
  # needs:
    # - {job: 'build:win:openssl', optional: true}
    # - {job: 'build:win:lzo', optional: true}
  script:
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_OPENSSL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_OPENSSL}"
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_LZO "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_LZO}"
    - IF(Test-Path .\build-libs\) {Get-ChildItem .\build-libs\*.zip | Foreach {.\tools\bin\7z.exe x $_.FullName $("-obuild-libs\"+$([io.path]::GetFileNameWithoutExtension($_.name)))}}
    - tools/deps/install_openvpn -zip
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_WIN == "y"'
      changes:
        - tools/vars/openvpn.yml
        - tools/vars/openssl.yml
        - tools/vars/jom.yml
        - tools/vars/lzo.yml


build:mac:openvpn:
  <<: *template_mac_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_OPENVPN
  # needs:
    # - {job: 'build:mac:openssl', optional: true}
    # - {job: 'build:mac:lzo', optional: true}
  script:
    - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_OPENSSL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_OPENSSL}"
    - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_LZO "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_LZO}"
    - if [ -d ./build-libs/ ]; then for z in ./build-libs/*.zip; do unzip -qod ${z%%.zip} $z; done; fi
    - tools/deps/install_openvpn -zip
    - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_MAC == "y"'
      changes:
        - tools/vars/openvpn.yml
        - tools/vars/openssl.yml
        - tools/vars/lzo.yml


# Build and Upload Protobuf
build:win:protobuf:
  <<: *template_win10_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_PROTOBUF
  # needs:
    # - {job: 'build:win:zlib', optional: true}
  script:
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_ZLIB "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_ZLIB}"
    - IF(Test-Path .\build-libs\) {Get-ChildItem .\build-libs\*.zip | Foreach {.\tools\bin\7z.exe x $_.FullName $("-obuild-libs\"+$([io.path]::GetFileNameWithoutExtension($_.name)))}}
    - tools/deps/install_protobuf -zip
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_WIN == "y"'
      changes:
        - tools/vars/protobuf.yml
        - tools/vars/zlib.yml


build:mac:protobuf:
  <<: *template_mac_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_PROTOBUF
  script:
    - tools/deps/install_protobuf -zip
    - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_MAC == "y"'
      changes:
        - tools/vars/protobuf.yml


# Build and Upload Qt
build:win:qt:
  <<: *template_win10_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_QT
  # needs:
    # - {job: 'build:win:jom', optional: true}
    # - {job: 'build:win:openssl', optional: true}
  script:
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_OPENSSL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_OPENSSL}"
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_JOM "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_JOM}"
    - IF(Test-Path .\build-libs\) {Get-ChildItem .\build-libs\*.zip | Foreach {.\tools\bin\7z.exe x $_.FullName $("-obuild-libs\"+$([io.path]::GetFileNameWithoutExtension($_.name)))}}
    - tools/deps/install_qt -zip
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_WIN == "y"'
      changes:
        - tools/vars/qt.yml
        - tools/vars/openssl.yml
        - tools/vars/jom.yml


build:mac:qt:
  <<: *template_mac_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_QT
  # needs:
    # - {job: 'build:mac:openssl', optional: true}
  script:
    - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_OPENSSL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_OPENSSL}"
    - if [ -d ./build-libs/ ]; then for z in ./build-libs/*.zip; do unzip -qod ${z%%.zip} $z; done; fi
    - tools/deps/install_qt
    - (cd ./build-libs/qt; zip --symlinks -r ../qt.zip .)
    - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_MAC == "y"'
      changes:
        - tools/vars/qt.yml
        - tools/vars/openssl.yml


# Build and Upload Stunnel
build:win:stunnel:
  <<: *template_win10_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_STUNNEL
  # needs:
    # - {job: 'build:win:jom', optional: true}
    # - {job: 'build:win:openssl', optional: true}
  script:
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_OPENSSL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_OPENSSL}"
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_JOM "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_JOM}"
    - IF(Test-Path .\build-libs\) {Get-ChildItem .\build-libs\*.zip | Foreach {.\tools\bin\7z.exe x $_.FullName $("-obuild-libs\"+$([io.path]::GetFileNameWithoutExtension($_.name)))}}
    - tools/deps/install_stunnel -zip
    - tools/bin/curl.exe --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/win/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_WIN == "y"'
      changes:
        - tools/vars/stunnel.yml
        - tools/vars/openssl.yml
        - tools/vars/jom.yml


build:mac:stunnel:
  <<: *template_mac_build
  stage: Build Dependencies 3
  variables:
    GIT_STRATEGY: clone
    ARTIFACT_PATH: $ARTIFACT_STUNNEL
  # needs:
    # - {job: 'build:mac:openssl', optional: true}
  script:
    - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --create-dirs -o $BUILDROOT/$ARTIFACT_OPENSSL "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_OPENSSL}"
    - if [ -d ./build-libs/ ]; then for z in ./build-libs/*.zip; do unzip -qod ${z%%.zip} $z; done; fi
    - tools/deps/install_stunnel -zip
    - curl --silent --show-error --fail -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" --cacert tools/cacert.pem --upload-file $BUILDROOT/$ARTIFACT_PATH "${NEXUS_BASEURL}${NEXUS_PATH_DEPS}${NEXUS_PATH_DEPS_BRANCHES}/${CI_COMMIT_BRANCH}/latest/macos/${ARTIFACT_PATH}"
  rules:
    - if: '$BUILD_LIBS_EVERYTIME == "y"'
    - if: '$BUILD_MAC == "y"'
      changes:
        - tools/vars/stunnel.yml
        - tools/vars/openssl.yml