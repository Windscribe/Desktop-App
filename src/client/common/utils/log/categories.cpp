#include "categories.h"
#include "logger.h"

#define WS_LOGGING_CATEGORY(name, ...) \
const QLoggingCategory &name() \
    { return log_utils::Logger::instance().connectionModeLoggingCategory(); }

Q_LOGGING_CATEGORY(LOG_BASIC, "basic")
Q_LOGGING_CATEGORY(LOG_IPC, "ipc")
Q_LOGGING_CATEGORY(LOG_CLI_IPC, "cli_ipc")
WS_LOGGING_CATEGORY(LOG_CONNECTION, "connection")
Q_LOGGING_CATEGORY(LOG_FAILOVER, "failover")
Q_LOGGING_CATEGORY(LOG_NETWORK, "network")
Q_LOGGING_CATEGORY(LOG_PING, "ping")
Q_LOGGING_CATEGORY(LOG_OPENVPN, "openvpn")
Q_LOGGING_CATEGORY(LOG_IKEV2, "ikev2")
Q_LOGGING_CATEGORY(LOG_LOCAL_WEBSERVER, "local_web")
Q_LOGGING_CATEGORY(LOG_SOCKS_SERVER, "socks_server")
Q_LOGGING_CATEGORY(LOG_HTTP_SERVER, "http_server")
Q_LOGGING_CATEGORY(LOG_WIFI_SHARED, "wifi_shared")
Q_LOGGING_CATEGORY(LOG_NETWORK_EXTENSION_MAC, "network_extension")
Q_LOGGING_CATEGORY(LOG_EMERGENCY_CONNECT, "emergency_connect")
Q_LOGGING_CATEGORY(LOG_FIREWALL_CONTROLLER, "firewall_controller")
Q_LOGGING_CATEGORY(LOG_BEST_LOCATION, "best_location")
Q_LOGGING_CATEGORY(LOG_WSTUNNEL, "wstunnel")
Q_LOGGING_CATEGORY(LOG_CTRLD, "ctrld")
Q_LOGGING_CATEGORY(LOG_CUSTOM_OVPN, "custom_ovpn")
Q_LOGGING_CATEGORY(LOG_WIREGUARD, "wireguard")
Q_LOGGING_CATEGORY(LOG_PACKET_SIZE, "packet_size")
Q_LOGGING_CATEGORY(LOG_DOWNLOADER, "downloader")
Q_LOGGING_CATEGORY(LOG_AUTO_UPDATER, "auto_updater")
Q_LOGGING_CATEGORY(LOG_LAUNCH_ON_STARTUP, "launch_on_startup")
Q_LOGGING_CATEGORY(LOG_CONNECTED_DNS, "connected_dns")
Q_LOGGING_CATEGORY(LOG_AUTH_HELPER, "auth_helper")
Q_LOGGING_CATEGORY(LOG_ASSERT, "assert")
Q_LOGGING_CATEGORY(LOG_SPLIT_TUNNEL_EXTENSION, "split_tunnel_ext")

Q_LOGGING_CATEGORY(LOG_USER,  "user")
Q_LOGGING_CATEGORY(LOG_LOCATION_LIST, "loclist");
Q_LOGGING_CATEGORY(LOG_PREFERENCES, "prefs")

Q_LOGGING_CATEGORY(LOG_CLI, "cli")
